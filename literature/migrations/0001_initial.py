# Generated by Django 5.0.6 on 2024-07-22 09:07

import django.db.models.deletion
import literature.utils
import partial_date.fields
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("taggit", "0005_auto_20220424_2025"),
    ]

    operations = [
        migrations.CreateModel(
            name="Collection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="modified"),
                ),
                ("name", models.CharField(max_length=255, verbose_name="name")),
                ("description", models.TextField(verbose_name="description")),
            ],
            options={
                "verbose_name": "collection",
                "verbose_name_plural": "collections",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="LiteratureItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=255, unique=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            (
                                "Academic and Professional",
                                [
                                    ("paper-conference", "Conference paper"),
                                    ("dataset", "Dataset"),
                                    ("article-journal", "Journal Article"),
                                    ("report", "Report"),
                                    ("standard", "Standard"),
                                ],
                            ),
                            (
                                "Books and Written Works",
                                [
                                    ("book", "Book"),
                                    ("chapter", "Book chapter"),
                                    ("classic", "Classic work"),
                                    ("collection", "Collection of works"),
                                    ("manuscript", "Manuscript"),
                                    ("thesis", "Thesis"),
                                ],
                            ),
                            (
                                "Legislation and Legal",
                                [
                                    ("bill", "Legislative bill"),
                                    ("hearing", "Congressional hearing"),
                                    ("legal_case", "Legal case"),
                                    ("legislation", "Legislation"),
                                    ("patent", "Patent"),
                                    ("regulation", "Regulation"),
                                    ("treaty", "Treaty"),
                                ],
                            ),
                            (
                                "Media and Communication",
                                [
                                    ("broadcast", "Broadcast"),
                                    ("interview", "Interview"),
                                    ("article-magazine", "Magazine Article"),
                                    ("article-newspaper", "Newspaper Article"),
                                    ("speech", "Speech"),
                                ],
                            ),
                            (
                                "Visual and Creative",
                                [
                                    ("figure", "Figure or illustration"),
                                    ("graphic", "Graphic work"),
                                    ("map", "Map"),
                                    ("motion_picture", "Motion picture"),
                                    ("musical_score", "Musical score"),
                                    ("performance", "Live performance"),
                                    ("software", "Software"),
                                    ("song", "Song"),
                                ],
                            ),
                            (
                                "Periodicals and Reviews",
                                [
                                    ("periodical", "Generic periodical"),
                                    ("review", "Review"),
                                    ("review-book", "Book review"),
                                ],
                            ),
                            (
                                "Digital and Online Content",
                                [
                                    ("post", "Blog post"),
                                    ("post-weblog", "Weblog post"),
                                    ("webpage", "Webpage"),
                                ],
                            ),
                            (
                                "Miscellaneous",
                                [
                                    ("article", "Generic Article"),
                                    ("document", "Generic Document"),
                                    ("entry", "Generic Entry"),
                                    ("entry-dictionary", "Dictionary Entry"),
                                    ("entry-encyclopedia", "Encyclopedia Entry"),
                                    ("event", "Event"),
                                    ("pamphlet", "Pamphlet"),
                                    (
                                        "personal_communication",
                                        "Personal communication",
                                    ),
                                ],
                            ),
                        ],
                        max_length=22,
                        verbose_name="type",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, db_index=True, max_length=255, null=True
                    ),
                ),
                ("issued", partial_date.fields.PartialDateField(blank=True, null=True)),
                ("item", models.JSONField(default=dict)),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "file",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=literature.utils.file_upload_path,
                        verbose_name="file",
                    ),
                ),
                (
                    "collections",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Add the entry to a collection.",
                        to="literature.collection",
                        verbose_name="collection",
                    ),
                ),
                (
                    "keyword",
                    taggit.managers.TaggableManager(
                        blank=True,
                        help_text="Keyword(s) or tag(s) attached to the item.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="key words",
                    ),
                ),
            ],
            options={
                "verbose_name": "entry",
                "verbose_name_plural": "entries",
                "ordering": ["created"],
            },
        ),
        migrations.CreateModel(
            name="SupplementaryMaterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="created"),
                ),
                (
                    "modified",
                    models.DateTimeField(auto_now=True, verbose_name="modified"),
                ),
                (
                    "file",
                    models.FileField(
                        upload_to=literature.utils.suppfile_upload_path,
                        verbose_name="file",
                    ),
                ),
                (
                    "literature",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="supplementary",
                        to="literature.literatureitem",
                        verbose_name="literature",
                    ),
                ),
            ],
            options={
                "verbose_name": "supplementary material",
                "verbose_name_plural": "supplementary material",
            },
        ),
    ]
