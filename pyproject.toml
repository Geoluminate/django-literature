[tool.poetry]
name = "django-literature"
version = "0.1.1"
description = "A scientific literature management tool for Django"
authors = ["Sam Jennings <samuel.scott.jennings@gmail.com>"]
license = "MIT"
readme = "README.rst"
packages = [{include = "literature"}]
homepage = "https://github.com/SSJenny90/django-literature"
keywords = ["django", "literature", "publications", "scientific", "research"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Django :: 3.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
django-model-utils = "^4.3.1"
django-taggit = "^3.1.0"
python-dateutil = "^2.8.2"
requests = "^2.28.2"
django-sortedm2m = "^3.1.1"
django-appconf = "^1.0.5"
django = ">=3.2"


[tool.poetry.group.dev.dependencies]
coverage = "^7.2.1"
black = "^23.1.0"
pytest = "^7.2.2"
factory-boy = "^3.2.1"
django-coverage-plugin = "^3.0.0"
pytest-django = "^4.5.2"
django-stubs = "^1.15.0"
flake8 = "^6.0.0"
flake8-isort = "^6.0.0"
pylint-django = "^2.5.3"
model-bakery = "^1.10.1"
invoke = "^2.0.0"
tox = "^4.4.6"
deptry = "^0.8.0"
mypy = "^1.2.0"
pre-commit = "^3.2.2"
pytest-cov = "^4.0.0"
types-requests = "^2.28.11.17"
types-python-dateutil = "^2.8.19.12"


[tool.poetry.group.docs.dependencies]
sphinx = "^6.1.3"
sphinx-copybutton = "^0.5.1"
sphinxext-opengraph = "^0.8.1"
sphinx-book-theme = "^1.0.0"
myst-parser = "^0.19.1"
sphinx-autobuild = "^2021.3.14"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# [tool.wheel]
# universal = 1


[tool.black]
line-length = 120
target-version = ['py37']
preview = true

# [tool.isort]
# profile = "black"

[tool.mypy]
files = ["literature"]
disallow_untyped_defs = "False"
disallow_any_unimported = "False"
ignore_missing_imports = "True"
no_implicit_optional = "True"
check_untyped_defs = "False"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"
exclude = ["docs/","migrations/","tests/settings.py"] 
mypy_path = "literature/"
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "tests.settings"

[tool.ruff]
target-version = "py37"
line-length = 120
fix = true
exclude = ['docs/']

select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101","S105"]
# "**/models.py" = ["A003",]
# "docs/conf.py" = ["*"]


[tool.coverage.report]
skip_empty = true
omit = [
    "*site-packages*",
    "*tests*",
    "*.tox*",
    ]
show_missing = "true"

[tool.coverage.run]
branch = "true"
source = ["literature"]


[tool.deptry]
extend_exclude = [
    "tasks.py",
]

# exclude_lines = raise NotImplementedError

# [tool.tox]
# legacy_tox_ini = """
# [tox]
# isolated_build = True
# envlist = py{310,39,38,37}-django{32,40}
# [testenv]
# whitelist_externals = poetry
# skip_install = true
# commands =
#     poetry install --no-root --only build
#     pip install -c tests/pip-constraints.txt .
#     poe lint
#     pytest
# """
