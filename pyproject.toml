[tool.poetry]
name = "django-literature"
version = "0.1.1"
description = "A scientific literature management tool for Django"
authors = ["Sam Jennings <samuel.scott.jennings@gmail.com>"]
license = "MIT"
readme = "README.rst"
packages = [{include = "literature"}]
homepage = "https://github.com/SSJenny90/django-literature"
keywords = ["django", "literature", "publications", "scientific", "research"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Django :: 3.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]

[tool.poetry.dependencies]
python = "^3.9"
django-model-utils = "^4.3.1"
django-taggit = "^3.1.0"
python-dateutil = "^2.8.2"
requests = "^2.28.2"
django-sortedm2m = "^3.1.1"


[tool.poetry.group.dev.dependencies]
coverage = "^7.2.1"
black = "^23.1.0"
pytest = "^7.2.2"
factory-boy = "^3.2.1"
django-coverage-plugin = "^3.0.0"
pytest-django = "^4.5.2"
django-stubs = "^1.15.0"
flake8 = "^6.0.0"
flake8-isort = "^6.0.0"
pylint-django = "^2.5.3"
model-bakery = "^1.10.1"
invoke = "^2.0.0"
tox = "^4.4.6"
django = "^4.1.7"


[tool.poetry.group.docs.dependencies]
sphinx = "^6.1.3"
sphinx-copybutton = "^0.5.1"
sphinxext-opengraph = "^0.8.1"
sphinx-book-theme = "^1.0.0"
myst-parser = "^0.19.1"
sphinx-autobuild = "^2021.3.14"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry_bumpversion.file."literature/__init__.py"]
# Duplicate the line above to add more files

[tool.wheel]
universal = 1

[tool.flake8]
ignore = "D203"
exclude = [
    "literature/migrations",
    ".git",
    ".tox",
    "docs/conf.py",
    "build",
    "dist"
]
max-line-length = 119

[tool.black]
target_version = ["py37", "py38", "py39", "py310", "py311"]

[tool.isort]
profile = "black"

[tool.coverage.run]
branch = "true"

[tool.coverage.report]
omit = [
    "*site-packages*",
    "*tests*",
    "*.tox*",
    ]
show_missing = "true"
# exclude_lines = raise NotImplementedError

# [tool.tox]
# legacy_tox_ini = """
# [tox]
# isolated_build = True
# envlist = py{310,39,38,37}-django{32,40}
# [testenv]
# whitelist_externals = poetry
# skip_install = true
# commands =
#     poetry install --no-root --only build
#     pip install -c tests/pip-constraints.txt .
#     poe lint
#     pytest
# """
